# This pipeline gets triggered manually or via an API call.  
# It is a general purpose automation that allows you to delete or "clean up" an unmanaged solution from a Dataverse environment.
# It is a destructive action and will remove everything in the solution from the environment.

# The following variables need to be set when the pipeline is queued to run:
# ServiceConnName
# SolutionName

trigger: none
pr: none

name: delete-unmanaged-$(SolutionName)-and-components-from-environment

variables:
- group: global-variable-group

pool:
  vmImage: 'windows-2019'

steps:
- checkout: none

- task: microsoft-IsvExpTools.PowerPlatform-BuildTools.tool-installer.PowerPlatformToolInstaller@0
  displayName: 'Power Platform Tool Installer '

- task: microsoft-IsvExpTools.PowerPlatform-BuildTools.export-solution.PowerPlatformExportSolution@0
  displayName: 'Export Solution as Unmanaged'
  inputs:
    authenticationType: PowerPlatformSPN
    PowerPlatformSPN: '$(ServiceConnName)'
    SolutionName: '$(SolutionName)'
    Managed: false
    SolutionOutputFile: '$(build.binariesdirectory)\$(SolutionName).zip'

- task: microsoft-IsvExpTools.PowerPlatform-BuildTools.import-solution.PowerPlatformImportSolution@0
  displayName: 'Import Unmanaged Solution and Convert to Managed'
  inputs:
    authenticationType: PowerPlatformSPN
    PowerPlatformSPN: '$(ServiceConnName)'
    SolutionInputFile: '$(build.binariesdirectory)\$(SolutionName).zip'
    OverwriteUnmanagedCustomizations: true
    PublishWorkflows: false
    ConvertToManaged: true

# - task: PowerPlatformDeleteSolution@0
#   displayName: 'Power Platform Delete Managed Solution'
#   inputs:
#     authenticationType: PowerPlatformSPN
#     PowerPlatformSPN: '$(ServiceConnName)'
#     SolutionName: '$(SolutionName)'