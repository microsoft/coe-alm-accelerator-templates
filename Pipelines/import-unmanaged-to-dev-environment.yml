# variables passed in by API:
# - Project
# - Repo
# - Branch
# - SolutionName
# - ServiceConnection
# - BuildDefinitionId
# - PipelineId
# - EnvironmentName
parameters:
- name: Branch
  type: string
- name: BranchToCreate
  type: string
  default: "Commit to existing branch specified in Branch parameter"
- name: CommitMessage
  type: string
- name: Data
  type: string
  default: "[]"
- name: Email
  type: string
- name: Project
  type: string
- name: Repo
  type: string
- name: ServiceConnectionName
  type: string
- name: ServiceConnectionUrl
  type: string
- name: SolutionName
  type: string
- name: UserName
  type: string
- name: PipelineId
  type: string
  default: "NA"
- name: EnvironmentName
  type: string
  default: "NA"
- name: BuildDefinitionId
  type: string
  default: "NA"
- name: ImportUnmanaged
  type: string
  default: "true"
- name: PortalSiteName
  type: string
  default: "NA"
- name: PublishCustomizations
  type: string
  default: "NA"
- name: CommitScope
  type: string
  default: "1"
trigger: none
pr: none

variables:
- group: alm-accelerator-variable-group

name: import-${{parameters.SolutionName}}

stages:
- stage: import_unmanaged_solution
  displayName: 'Import unmanaged solution' 
  jobs:
  - job: import_unmanaged_solution
  
    pool:
      vmImage: 'windows-2022'

    steps:
    - template: Templates\set-service-connection-url.yml
      parameters:
        serviceConnectionName: ${{parameters.ServiceConnectionName}}
        serviceConnectionUrl: ${{parameters.ServiceConnectionUrl}}

    - pwsh: |
        Write-Host "##vso[task.setvariable variable=RepoName]${{parameters.Repo}}"
      displayName: 'Set Source Repo Name'
  
    # Set IsUnmanaged variable to 'True'
    - pwsh: |
       Write-Host "ImportUnmanaged - "  ${{parameters.ImportUnmanaged}}

        $buildType = 'Both'
        $isunmanaged = 'false'
        if('${{parameters.ImportUnmanaged}}' -eq 'true'){
            Write-Host "ImportUnmanaged is requested - " ${{parameters.ImportUnmanaged}}        
            $buildType = 'Unmanaged'
            $isunmanaged = 'true'
        }

        Write-Host "##vso[task.setVariable variable=BuildType]$buildType"
        Write-Host "##vso[task.setVariable variable=IsUnmanaged]$isunmanaged"
      displayName: "Set build type parameter"

    - template: Templates\build-unmanaged-Solution.yml
      parameters:
        project: ${{parameters.Project}}
        repo: ${{parameters.Repo}}
        branch: ${{parameters.Branch}}
        serviceConnectionName: ${{parameters.ServiceConnectionName}}
        serviceConnectionUrl: ${{parameters.ServiceConnectionUrl}}
        solutionName: ${{parameters.SolutionName}}
        buildType: $(BuildType)
      
    - template: Templates\deploy-Solution.yml
      parameters:
        environmentName: ${{parameters.EnvironmentName}}
        serviceConnectionName: ${{parameters.ServiceConnectionName}}
        serviceConnectionUrl: ${{parameters.ServiceConnectionUrl}}
        solutionName: ${{parameters.SolutionName}}
        importUnmanaged: $(IsUnmanaged)
        skipBuildToolsInstaller: 'true'
        
    - template: Templates\update-canvas-app-ownership.yml
      parameters:
        solutionName: ${{parameters.SolutionName}}