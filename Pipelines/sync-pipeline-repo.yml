# This pipeline gets triggered manually or via an API call.  
# The pipeline is designed to synchronize a github repository into an Azure DevOps git repositiory.
# It facilitates:
# -Synchronization of main branch  or a tag from source git repository into the Azure DevOps git repository
# -Create a Pull Request to merge changes
# -Assign Pull Request to the user that requested the pipeline to run.

# The following variables need to be set when the pipeline is queued to run:
# Template-repo: The source github repository to be synced into the Azure DevOps git repository that this pipeline is in.
#                Example: https://github.com/microsoft/coe-alm-accelerator-templates

# The following parameters are required for pipeline to run:
# SyncFrom: Either Branch or Tag to define if sync is from a branch or a tag
# SourceBranchOrTag: The branch or tag in remote repository to sync from. If SyncFrom is Branch a branc name is expected. If SyncFrom is Tag a tag is expected
# BranchToCreate: The name of the new Azure DevOps Branch to create in the Repo above to which we are pulling main branch from Template-repo.
# TargetBranch: The name of the Azure DevOps Branch to target for the Pull Request.

parameters:
- name: SyncFrom
  type: string
  values:
    - Branch
    - Tag
  default: Branch
- name: SourceBranchOrTag
  type: string
  default: 'main'
- name: BranchToCreate
  type: string
  default: 'update-from-original-repo'
- name: TargetBranch
  type: string
  default: 'main'
- name: AutoCompletePR
  type: string
  values:
    - false
    - true
  default: false
- name: DeleteSourceBranch
  type: string
  values:
    - false
    - true
  default: false

trigger: none
pr: none

stages:
- stage: sync
  displayName: Sync
  jobs:
  - job: syncjob
    pool:
        vmImage: 'windows-latest'
    steps:
      - checkout: self
        persistCredentials: true

      - pwsh: |
            Write-Host "##vso[task.setvariable variable=syncTemplateRepo]$(TEMPLATE-REPO)"
        displayName: 'Sync from $(TEMPLATE-REPO)'
        condition: ne(variables['TEMPLATE-REPO'], '')

      - pwsh: |
            Write-Host "##vso[task.setvariable variable=syncTemplateRepo]https://github.com/microsoft/coe-alm-accelerator-templates"
        displayName: 'Sync from https://github.com/microsoft/coe-alm-accelerator-templates'
        condition: eq(variables['TEMPLATE-REPO'], '')


        # add Azure DevOps extension
      - script: az extension add -n azure-devops
        displayName: 'Install Azure DevOps Extension'

        # sign in to Azure DevOps
      - script: echo $(System.AccessToken) | az devops login
        env:
          AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
        displayName: 'Login Azure DevOps Extension'

        # Configure email/name
      - script: |
          git config --global user.email "$(Build.RequestedForEmail)"
          git config --global user.name "$(Build.RequestedFor)"
        displayName: 'Set git user info'

        # Add remote and fetch source branch
      - script: | 
          git remote add template-repo $(syncTemplateRepo)
          git fetch template-repo ${{parameters.SourceBranchOrTag}}
        displayName: 'Fetch branch from cloned repository'
        condition: and(succeeded(), eq('${{parameters.SyncFrom}}', 'Branch'))

        # Add remote and fetch source tag
      - script: | 
          git remote add template-repo $(syncTemplateRepo)
          git fetch template-repo refs/tags/${{parameters.SourceBranchOrTag}}:refs/tags/${{parameters.SourceBranchOrTag}}
        displayName: 'Fetch tag from cloned repository'
        condition: and(succeeded(), eq('${{parameters.SyncFrom}}', 'Tag'))

        # Create new branch and push to origin
      - script: |
          git checkout -b ${{parameters.BranchToCreate}} template-repo/${{parameters.SourceBranchOrTag}}
          git push origin +${{parameters.BranchToCreate}}
        displayName: 'Push branch to ${{parameters.BranchToCreate}} to AzDO repo'
        condition: and(succeeded(), eq('${{parameters.SyncFrom}}', 'Branch'))

        # Create new branch from tag and push to origin
      - script: |
          git checkout tags/${{parameters.SourceBranchOrTag}} -b ${{parameters.BranchToCreate}}
          git push origin +${{parameters.BranchToCreate}}
        displayName: 'Push tag to ${{parameters.BranchToCreate}} to AzDO repo'
        condition: and(succeeded(), eq('${{parameters.SyncFrom}}', 'Tag'))

        # Set default org and project
      - powershell: az devops configure --defaults organization=$(System.CollectionUri) project="$(System.TeamProject)"
        displayName: 'Set az devops defaults'

        # Create Pull Requests
      - powershell: az repos pr create --source-branch ${{parameters.BranchToCreate}} --delete-source-branch ${{parameters.DeleteSourceBranch}} --auto-complete ${{parameters.autoCompletePR}} --target-branch ${{parameters.TargetBranch}} --reviewers="$(Build.RequestedForEmail)" --title 'Sync from cloned repository'
        displayName: 'Create PR - ${{parameters.BranchToCreate}} to ${{parameters.TargetBranch}}'
