#We are going to set websiteId as a pipeline variable only if there is a Power Page in the Dataverse

parameters:
- name: websiteId
  type: string
- name: repo
  type: string
- name: serviceConnectionUrl
  type: string
- name: serviceConnectionName
  type: string
- name: solutionName
  type: string
- name: websiteName
  type: string
- name: commitScope
  type: string
  default: '1'
- name: configurationData
  type: string
- name: buildSourceDirectory
  type: string
steps:
# ALM Accelerator currently supports ALM of single website.
# PowerPages folder contain one subfolder at depth 1, which is the unpacked WebSite folder.
# Check if unpacked website folder already exists; If exists Clean the folder in the next step
- pwsh: |
    . "$env:POWERSHELLPATH/portal-functions.ps1"
    Process-and-Download-Websites "${{parameters.buildSourceDirectory}}" "${{parameters.repo}}" "${{parameters.solutionName}}" "$(pacPath)" "${{parameters.serviceConnectionUrl}}" "$(connectionVariables.BuildTools.ApplicationId)" "$(connectionVariables.BuildTools.ClientSecret)" "$(connectionVariables.BuildTools.TenantId)" "${{parameters.websiteName}}" "$env:MAPPED_SPN_Token"
  displayName: "Download website(s)"
  #condition: and(succeeded(), ne('${{parameters.commitScope}}', '3'))
  condition: and(succeeded(), ne('${{parameters.commitScope}}', '3'), and(ne('${{parameters.websiteName}}', 'NA'), ne('${{parameters.websiteName}}', '')))
  env:
    MAPPED_SPN_Token: $(SpnToken)

# Logic to read and set deployment profiles yml files under .\PowerPages\Websitename\deployment-profiles
- pwsh: |
    . "$env:POWERSHELLPATH/portal-functions.ps1"
    . "$env:POWERSHELLPATH/dataverse-webapi-functions.ps1"
    $websiteName = Get-Website-Name "${{parameters.buildSourceDirectory}}" "${{parameters.repo}}" "${{parameters.solutionName}}"
    Write-Host "websiteName - $websiteName"
    . "$env:POWERSHELLPATH/update-deployment-settings.ps1"
    Set-PortalSettings-Files "${{parameters.buildSourceDirectory}}" "${{parameters.repo}}" "${{parameters.serviceConnectionUrl}}" "${{parameters.solutionName}}" "$websiteName" "$env:MAPPED_SPN_Token"
  env:
    DEPLOYMENT_SETTINGS: ${{parameters.configurationData}}
    MAPPED_SPN_Token: $(SpnToken)
  displayName: 'Fetch and set deployment profiles'
  condition: and(succeeded(), ne('${{parameters.commitScope}}', '3'), and(ne('${{parameters.websiteName}}', 'NA'), ne('${{parameters.websiteName}}', '')))