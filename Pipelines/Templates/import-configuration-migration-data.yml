parameters:
- name: serviceConnection
  type: string
- name: environmentName
  type: string

steps:
- pwsh: |
   $path = "$(Pipeline.Workspace)/drop/ConfigurationMigrationData-${{parameters.environmentName}}.zip"
   . "$env:POWERSHELLPATH/export-solution-functions.ps1"
    Invoke-Check-If-Configuration-Migration-Data-Exists "$path" "$(Pipeline.Workspace)"
  displayName: 'Check if Configuration Migration Data exists'
  
- task: microsoft-IsvExpTools.PowerPlatform-BuildTools.import-data.PowerPlatformImportData@2
  #skip task if there is no ConfigurationMigrationData in the downloaded artifact
  condition: and(succeeded(), ne(variables['ConfigurationMigrationFilePath'], ''))
  displayName: 'Import Configuration Migration Data'  
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: ${{ parameters.serviceConnection }}
    DataFile: $(ConfigurationMigrationFilePath)