parameters:
- name: branch
  type: string
- name: project
  type: string
- name: repo
  type: string
- name: serviceConnectionName
  type: string
- name: serviceConnectionUrl
  type: string
- name: solutionName
  type: string
- name: environmentName
  type: string
  default: "NA"
- name: importUnmanaged
  type: string
  default: "true"

steps:
- template: set-service-connection-url.yml
  parameters:
    serviceConnectionName: ${{parameters.serviceConnectionName}}
    serviceConnectionUrl: ${{parameters.serviceConnectionUrl}}

- pwsh: |
    Write-Host "##vso[task.setvariable variable=RepoName]${{parameters.repo}}"
  displayName: 'Set Source Repo Name'

# Set IsUnmanaged variable to 'True'
- pwsh: |
    Write-Host "importUnmanaged - "  ${{parameters.importUnmanaged}}

    $buildType = 'Both'
    $isunmanaged = 'false'
    if('${{parameters.importUnmanaged}}' -eq 'true'){
        Write-Host "importUnmanaged is requested - " ${{parameters.importUnmanaged}}        
        $buildType = 'Unmanaged'
        $isunmanaged = 'true'
    }

    Write-Host "##vso[task.setVariable variable=BuildType]$buildType"
    Write-Host "##vso[task.setVariable variable=IsUnmanaged]$isunmanaged"
  displayName: "Set build type parameter"

- template: build-unmanaged-Solution.yml
  parameters:
    project: ${{parameters.project}}
    repo: ${{parameters.repo}}
    branch: ${{parameters.branch}}
    serviceConnectionName: ${{parameters.serviceConnectionName}}
    serviceConnectionUrl: ${{parameters.serviceConnectionUrl}}
    solutionName: ${{parameters.solutionName}}
    buildType: $(BuildType)
  
- template: deploy-Solution.yml
  parameters:
    environmentName: ${{parameters.environmentName}}
    serviceConnectionName: ${{parameters.serviceConnectionName}}
    serviceConnectionUrl: ${{parameters.serviceConnectionUrl}}
    solutionName: ${{parameters.solutionName}}
    importUnmanaged: $(IsUnmanaged)
    skipBuildToolsInstaller: 'true'
    
- template: update-canvas-app-ownership.yml
  parameters:
    solutionName: ${{parameters.solutionName}}