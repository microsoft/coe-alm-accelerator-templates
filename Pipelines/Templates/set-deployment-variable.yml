parameters:
- name: variableName
  type: string
- name: deploymentSettingsPath
  type: string
- name: deploymentSettingsNode
  type: string
- name: displayName
  type: string

steps:
- pwsh: |
    # The if statement below is checking to see if the variable has been set in the pipeline. If it hasn't been set the value of the variable will be the name of the variable (e.g. $(SomeDeploymentVariable) it should be safe to check for the characters '$(' to determine if it's been set
    Write-Host 'Setting variable from ${{parameters.deploymentSettingsPath}}'
    $variableValue = ""
    if('${{parameters.deploymentSettingsPath}}' -ne '')
    {
        $deploymentSettings = Get-Content "${{parameters.deploymentSettingsPath}}" | ConvertFrom-Json
        $settingsNode = $deploymentSettings.${{parameters.deploymentSettingsNode}}
        if($null -ne $settingsNode) {
            Write-Host "Found settings node in ${{parameters.deploymentSettingsNode}}"
            $settingsJson = $settingsNode | ConvertTo-Json
            if ($settingsJson -ne '') {
                $variableValue = "$(Agent.BuildDirectory)\${{parameters.variableName}}.json"
                if (Test-Path $variableValue) {
                    Remove-Item $variableValue
                }
                Write-Host "Writing to file $variableValue"
                Write-Host $settingsJson
                $settingsJson | Out-File $variableValue
            }
        }
    }
    # Set the deployment variable for use elsewhere
    Write-Host "##vso[task.setvariable variable=${{parameters.variableName}};]$variableValue"
  displayName: ${{parameters.displayName}}