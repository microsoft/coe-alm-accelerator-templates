parameters:
  - name: serviceConnection
    type: string
  - name: flowShareWithGroupTeamConfiguration
    type: string

steps:
- pwsh: |
    $flowShareWithGroupTeamConfiguration = '${{parameters.flowShareWithGroupTeamConfiguration}}'
    if($flowShareWithGroupTeamConfiguration -ne ''){
        # load PowerShell files into memory
        . "$env:POWERSHELLPATH/dataverse-webapi-functions.ps1"
        . "$env:POWERSHELLPATH/share-rows-with-group-team.ps1"

        $config = Get-Content '${{parameters.flowShareWithGroupTeamConfiguration}}' | ConvertFrom-Json
        $dataverseHost = Get-HostFromUrl '${{parameters.serviceConnection}}'

        foreach ($c in $config) {
            if($c.aadGroupTeamName -ne '' -and $c.solutionComponentUniqueName -ne '') {
                Write-Host "Sharing flow - " $c.solutionComponentUniqueName " with " $c.aadGroupTeamName
                try {
                    Grant-AccessToWorkflow "$env:MAPPED_SPN_Token" "$dataverseHost" $c.aadGroupTeamName $c.solutionComponentUniqueName                    
                } catch {
                    Write-Host "Grant-AccessToWorkflow execution failed - $($_.Exception.Message)"
                }
            }
        }
    }
  displayName: "Share Flows with Group Team"
  condition: and(succeeded(), not(contains(variables['outFlowShareWithGroupTeamConfiguration'], '$(')))
  env:
    MAPPED_SPN_Token: $(SpnToken)                