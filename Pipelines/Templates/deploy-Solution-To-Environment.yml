stages:
- stage: deploy
  displayName: 'Deploy to Environment'
  jobs:
  - deployment: 
    pool:
      ${{ if eq(variables.Agent.Name, 'Azure Pipelines') }}:
        vmImage: 'windows-latest'
    environment: '$(EnvironmentName)'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: set-service-connection-url.yml
            parameters:
              serviceConnectionName: $(ServiceConnection)
              serviceConnectionUrl: $(ServiceConnectionUrl)

          - checkout: PipelineRepo
            path: 'PipelineUtils'
            displayName: 'Checkout Pipeline Branch'

          - template: deploy-Solution.yml
            parameters:
              serviceConnectionName: '$(ServiceConnection)'
              serviceConnectionUrl: '$(ServiceConnectionUrl)'
              environmentName: '$(EnvironmentName)'
              solutionName: '$(SolutionName)'
              cacheEnabled: 'false'
          - publish: $(Pipeline.Workspace)/buildPipeline/drop/
            artifact: drop